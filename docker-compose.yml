version: '3.8'
services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5
    networks:
      - app-network
    command: postgres -c listen_addresses='*'

  backend:
    image: ${DOCKER_REGISTRY-}backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # PostgreSQL параметры
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      # S3 параметры для внешнего хранилища
      - S3_INTERNAL_ENDPOINT=${S3_INTERNAL_ENDPOINT}
      - S3_EXTERNAL_ENDPOINT=${S3_EXTERNAL_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_USE_SSL=${S3_USE_SSL}
      # SMTP настройки для восстановления пароля
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SENDER_NAME=${SMTP_SENDER_NAME}
      # Используем публичный URL для доступа к фронтенду
      - FRONTEND_URL=${FRONTEND_URL}:${FRONTEND_PORT}
    networks:
      - app-network

  frontend:
    image: ${DOCKER_REGISTRY-}frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - VUE_APP_API_URL=${FRONTEND_URL}:${FRONTEND_PORT}/api
    volumes:
      - ./ssl:/etc/nginx/ssl   # Монтирование SSL-сертификатов

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: